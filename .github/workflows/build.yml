name: CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master

jobs:

  build:
    runs-on: ubuntu-jammy-16-cores-amd64
    env:
      CACHED_PATHS: |
        ~/.ccache
        ~/.cargo
        target
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ "gcc", "clang"]
        protocol: ["current", "next"]
        scenario: ["", "--check-test-tx-meta"]
    steps:
      # We start with as cheap as possible a cache probe to see if we have an exact hit on this
      # git commit ID (for a given OS/toolchain/protocol). If so we can skip all subsequent
      # steps: we already tested this exact SHA.
      #
      # Unfortunately due to the way github actions control flow works, we have to repeat the
      # step 'if' condition in each step, and cannot actually "exit early" and skip the job.
      # There are a lot of duplicate bug reports filed on this aspect of github actions, don't
      # bother filing another.
      - name: Probe Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHED_PATHS }}
          key: ${{ runner.os }}-${{ matrix.toolchain }}-${{ matrix.protocol }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.toolchain }}-${{ matrix.protocol }}-

      - uses: actions/checkout@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
           fetch-depth: 200
           submodules: true
      - name: install core packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get -y install --no-install-recommends apt-utils dialog git iproute2 procps lsb-release
      - name: install tool chain
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get -y install libstdc++-10-dev clang-format-12 ccache lldb
          if test "${{ matrix.toolchain }}" = "gcc" ; then
            sudo apt-get -y install cpp-10 gcc-10 g++-10
          else
            sudo apt-get -y install clang-12 llvm-12
          fi
      - name: install rustup components
        if: steps.cache.outputs.cache-hit != 'true'
        run: rustup component add rustfmt
      - name: install cargo-cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo install --locked cargo-cache --version 0.8.3
      - name: install cargo-sweep
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo install --locked cargo-sweep --version 0.7.0
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get -y install postgresql git build-essential pkg-config autoconf automake libtool bison flex libpq-dev parallel libunwind-dev sed perl
      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          if test "${{ matrix.toolchain }}" = "gcc" ; then
            export CC='gcc'
            export CXX='g++'
          else
            export CC='clang'
            export CXX='clang++'
          fi
          echo Build with $CC and $CXX
          ./ci-build.sh --use-temp-db --protocol ${{ matrix.protocol }} ${{ matrix.scenario }}
